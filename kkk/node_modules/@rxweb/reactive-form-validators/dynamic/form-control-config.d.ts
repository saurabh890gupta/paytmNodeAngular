import { AbstractControl, ValidatorFn, AsyncValidatorFn } from "@angular/forms";
import { ActionFnConfig, Hooks } from "../models/config/action-config";
export declare abstract class FormControlConfig {
    controlsConfig: {
        [key: string]: FormControlConfig;
    };
    private _value;
    private _source;
    private _formControl;
    private _isPlainTextMode;
    constructor(fieldConfig: {
        [key: string]: any;
    }, controlsConfig: {
        [key: string]: FormControlConfig;
    });
    config: {
        [key: string]: any;
    };
    inputs: any;
    events: any;
    validator: ValidatorFn;
    asyncValidator: AsyncValidatorFn;
    onHide: () => void;
    hooks: Hooks;
    actions: ActionFnConfig;
    override: boolean;
    attributeChangeSubscriptions: Array<any>;
    onAttributeValueChange(names: string[], func: Function): void;
    formControl: AbstractControl;
    source: any[] | Promise<any[]>;
    value: any;
    disable: boolean;
    label: string;
    placeholder: string;
    hide: boolean;
    description: string;
    focus: boolean;
    readonly: boolean;
    cssClassNames: string[];
    isPlainTextMode: boolean;
    viewMode: string;
    readonly prependText: any;
    complete(): void;
    refresh(actionName?: string): void;
    notifyAttributeValueChange(name: any, value: any): void;
    private isNotEqual;
    private setActionValue;
    private updateActionValue;
    private setNotifications;
    private setActions;
    private _actionResult;
    private controlNotifications;
}
